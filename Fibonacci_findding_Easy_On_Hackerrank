import java.util.* ; 
public class Main{
    static long mod = 1000000007 ; 
    public static void  multiply(long mat[][] ,  long mat1[][]){
        long c[][] = new long[mat.length][mat.length] ; 
        int n = mat.length ; 
        for(int i = 0 ;i < n ; i++){
            for(int j = 0 ; j < n ; j++){
                long sum = 0 ; 
                for(int k = 0 ; k < n ; k++){
                    sum = (sum + (mat[i][k] * mat1[k][j])) % mod ; 
                }
                c[i][j] = sum ; 
            }
        }
        for(int i = 0 ; i < n ; i++){
            for(int j = 0 ;j < n ; j++){
                mat[i][j] = c[i][j] ; 
            }
        }
    }
    public static void matMulti(long mat[][] , int n){
        if(n <= 1)return ; 
        int size = mat.length ; 
        long res[][] = new long[size][size] ; 
        for(int i = 0 ;i < size ; i++)res[i][i] = 1 ; 
        while(n != 0){
            if((n & 1) == 1){
                multiply(res , mat) ; 
            }
            multiply(mat , mat) ; 
            n /= 2 ; 
        }
        for(int i=0 ; i <size ; i++){
            for(int j = 0 ;j < size ; j++){
                mat[i][j] = res[i][j] ;  
            }
        }
    }
    public static void main(String []args){
        Scanner sc = new Scanner(System.in); 
        int t = sc.nextInt() ; 
        while(t --> 0){
            int a = sc.nextInt() ; 
            int b = sc.nextInt() ; 
            int no = sc.nextInt() ; 
            long arr[][] = {{1 , 1}, {1 , 0}} ;  
            matMulti(arr , no -1 ) ; 
            long ans = (arr[0][0] * b + arr[0][1] * a) % mod ;  
            //multiply(arr , fibo) ; 
            System.out.println(no <= 1 ? no == 0 ? a : b : ans) ; 
        }
    }
}
